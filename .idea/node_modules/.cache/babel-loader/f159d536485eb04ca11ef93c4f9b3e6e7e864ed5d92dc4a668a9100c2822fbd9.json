{"ast":null,"code":"var _jsxFileName = \"C:\\\\kanban-project\\\\src\\\\components\\\\board\\\\Board.jsx\";\nimport uniqid from \"uniqid\";\nimport { LIST_TYPES, LIST_COPY } from \"../../config\";\nimport List from \"../list/List\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    tasks,\n    setTasks\n  } = _ref;\n  function addNewTask(title, description, stat) {\n    const task = {\n      id: uniqid(),\n      title,\n      description,\n      created: new Date().toISOString(),\n      status: stat\n    };\n    setTasks([...tasks, task]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: Object.values(LIST_TYPES).map(type => {\n      const listTasks = tasks.filter(task => task.status === type);\n      return /*#__PURE__*/_jsxDEV(List, {\n        type: type,\n        title: LIST_COPY[type],\n        tasks: tasks,\n        task: listTasks,\n        addNewTask: addNewTask,\n        setTasks: setTasks\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["uniqid","LIST_TYPES","LIST_COPY","List","jsxDEV","_jsxDEV","Board","_ref","tasks","setTasks","addNewTask","title","description","stat","task","id","created","Date","toISOString","status","className","children","Object","values","map","type","listTasks","filter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/kanban-project/src/components/board/Board.jsx"],"sourcesContent":["import uniqid from \"uniqid\";\r\nimport { LIST_TYPES, LIST_COPY } from \"../../config\";\r\nimport List from \"../list/List\";\r\nimport \"./Board.css\";\r\n\r\nconst Board = ({ tasks, setTasks }) => {\r\n  function addNewTask(title, description, stat) {\r\n    const task = {\r\n      id: uniqid(),\r\n      title,\r\n      description,\r\n      created: new Date().toISOString(),\r\n      status: stat,\r\n    };\r\n\r\n    setTasks([...tasks, task]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      {Object.values(LIST_TYPES).map((type) => {\r\n        const listTasks = tasks.filter((task) => task.status === type);\r\n\r\n        return (\r\n          <List\r\n            key={type}\r\n            type={type}\r\n            title={LIST_COPY[type]}\r\n            tasks={tasks}\r\n            task={listTasks}\r\n            addNewTask={addNewTask}\r\n            setTasks={setTasks}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,UAAU,EAAEC,SAAS,QAAQ,cAAc;AACpD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,SAASG,UAAUA,CAACC,KAAK,EAAEC,WAAW,EAAEC,IAAI,EAAE;IAC5C,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEf,MAAM,CAAC,CAAC;MACZW,KAAK;MACLC,WAAW;MACXI,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjCC,MAAM,EAAEN;IACV,CAAC;IAEDJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,IAAI,CAAC,CAAC;EAC5B;EAEA,oBACET,OAAA;IAAKe,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBC,MAAM,CAACC,MAAM,CAACtB,UAAU,CAAC,CAACuB,GAAG,CAAEC,IAAI,IAAK;MACvC,MAAMC,SAAS,GAAGlB,KAAK,CAACmB,MAAM,CAAEb,IAAI,IAAKA,IAAI,CAACK,MAAM,KAAKM,IAAI,CAAC;MAE9D,oBACEpB,OAAA,CAACF,IAAI;QAEHsB,IAAI,EAAEA,IAAK;QACXd,KAAK,EAAET,SAAS,CAACuB,IAAI,CAAE;QACvBjB,KAAK,EAAEA,KAAM;QACbM,IAAI,EAAEY,SAAU;QAChBhB,UAAU,EAAEA,UAAW;QACvBD,QAAQ,EAAEA;MAAS,GANdgB,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAhCI1B,KAAK;AAkCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}